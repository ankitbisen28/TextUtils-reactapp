{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","to","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","target","value","background","rows","disabled","length","newText","toUpperCase","toLowerCase","navigator","clipboard","writeText","split","filter","element","defaultProps","aboutText","App","setMode","cls","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fabb1022.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link as a } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" to=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" to=\"/about\">{props.aboutText}  </a>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className=\"d-flex\">\r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'about text here'\r\n};\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=> {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLwClick = ()=> {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleClearClick = ()=> {\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n    \r\n    const handleOnchange = (event)=> {\r\n        // console.log(\"Handal on change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className='container' style={{color: props.mode=== 'dark'?'white':'#1a3852'}}>\r\n            <h1 className='my-3'>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"mytext\" onChange={handleOnchange} style={{background: props.mode=== 'dark'?'#274e70':'white', color: props.mode=== 'dark'?'white':'#1a3852'}} value={text} rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-success my-1\" onClick={handleUpClick}>Convert to Uppercase</button> \r\n            <button disabled={text.length===0} className=\"btn btn-warning mx-1\" onClick={handleLwClick}>Convert to Lowercase</button> \r\n            <button disabled={text.length===0} className=\"btn btn-dark my-1\" onClick={handleClearClick}>Clear</button> \r\n            <button disabled={text.length===0} className=\"btn btn-danger my-1 mx-1\" onClick={handleCopy}>Copy</button> \r\n        </div> \r\n        <div className=\"container\" style={{color: props.mode=== 'dark'?'white':'#1a3852'}}>\r\n            <h1>Your text summary</h1>\r\n            <p><strong>{text.split(/\\s/).filter((element)=> {return element.length!==0}).length} </strong> words and <strong>{text.length}</strong>  characters</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=> {return element.length!==0}).length} Minutes to read </p>\r\n            <h3>Priview</h3>\r\n            <p>{text.length>0?text:\"Enter something in the text box above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light') // dark mode enable or not \n  const toggleMode = (cls) => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#1a3852';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        {/* <Navbar /> */}\n        <Navbar title=\"TextUtiles\" aboutText='About Us' mode={mode} toggleMode={toggleMode} />\n        <div className=\"container\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\">\n              <About mode={mode}/>\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm heading=\"Try TextUtils - Word Counter, Character Counter\" mode={mode} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}